[tool.poetry]
name = "bink-logging-utils"
version = "0.0.0"
description = "helper functions for setting up loguru as the default log output"
authors = ["Bink <bink@bink.bink>"]
readme = "README.md"
repository = "https://github.com/binkhq/bink-logging-utils"
packages = [{include = "bink_logging_utils"}]
keywords = ["logging", "gunicorn", "loguru"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = "^3.11"
loguru = "^0.7.0"
gunicorn = {version = "^22.0.0", optional = true}

[tool.poetry.group.dev.dependencies]
black = "^24.3.0"
isort = "^5.12.0"
ruff = "^0.0.272"
refurb = "^1.16.0"
mypy = "^1.3.0"
xenon = "^0.9.0"

[tool.poetry.extras]
gunicorn = ["gunicorn"]

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = true

[tool.poetry-dynamic-versioning.substitution]
files = ["bink_logging_utils/version.py"]

[tool.mypy]
disallow_untyped_defs = true
show_error_codes = true
warn_unused_ignores = true
ignore_missing_imports = true
disallow_incomplete_defs = true
warn_redundant_casts = true

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120

[tool.ruff]
line-length = 120
show-source = true
target-version = "py311"
select = [
    "F",    # Pyflakes (F)
    "E",
    "W",    # pycodestyle (E, W)
    "C90",  # mccabe (C90)
    # isort (I)
    # pydocstyle (D)
    "UP",   # pyupgrade (UP)
    "N",    # pep8-naming (N)
    "YTT",  # flake8-2020 (YTT)
    "ANN",  # flake8-annotations (ANN)
    "S",    # flake8-bandit (S)
    "BLE",  # flake8-blind-except (BLE)
    # flake8-boolean-trap (FBT)
    "B",    # flake8-bugbear (B)
    "A",    # flake8-builtins (A)
    "C4",   # flake8-comprehensions (C4)
    "T10",  # flake8-debugger (T10)
    # flake8-errmsg (EM)
    "ICN",  # flake8-import-conventions (ICN)
    "T20",  # flake8-print (T20)
    # "PT",   # flake8-pytest-style (PT)
    "Q",    # flake8-quotes (Q)
    # flake8-return (RET)
    "SIM",  # flake8-simplify (SIM)
    "TID",  # flake8-tidy-imports (TID)
    "ARG",  # flake8-unused-arguments (ARG)
    "DTZ",  # flake8-datetimez (DTZ)
    "ERA",  # eradicate (ERA) until we can remove commented out code this has to stay deactivated
    # pandas-vet (PD)
    # pygrep-hooks (PGH)
    "PLC",
    "PLE",
    "PLR",
    "PLW",  # Pylint (PLC, PLE, PLR, PLW)
    "RUF",  # Ruff-specific rules (RUF)
]

ignore = [
    "ANN101" # Missing type annotation for `self` in method
]
